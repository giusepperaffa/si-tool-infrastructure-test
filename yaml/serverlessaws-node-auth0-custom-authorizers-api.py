# =========================
# Infrastructure Dictionary
# =========================
InfrastructureDict = {'service': 'aws-custom-authorizer-auth0', 'plugins': ['serverless-offline'], 'provider': {'name': 'aws', 'runtime': 'nodejs12.x', 'region': 'us-west-2', 'environment': {'AUTH0_CLIENT_ID': '${file(./secrets.json):AUTH0_CLIENT_ID}', 'AUTH0_CLIENT_PUBLIC_KEY': '${file(./public_key)}'}}, 'functions': {'auth': {'handler': 'handler.auth'}, 'publicEndpoint': {'handler': 'handler.publicEndpoint', 'events': [{'http': {'path': 'api/public', 'method': 'post', 'cors': True}}]}, 'privateEndpoint': {'handler': 'handler.privateEndpoint', 'events': [{'http': {'path': 'api/private', 'method': 'post', 'authorizer': 'auth', 'cors': True}}]}}, 'resources': {'Resources': {'GatewayResponse': {'Type': 'AWS::ApiGateway::GatewayResponse', 'Properties': {'ResponseParameters': {'gatewayresponse.header.Access-Control-Allow-Origin': "'*'", 'gatewayresponse.header.Access-Control-Allow-Headers': "'*'"}, 'ResponseType': 'EXPIRED_TOKEN', 'RestApiId': {'Ref': 'ApiGatewayRestApi'}, 'StatusCode': '401'}}, 'AuthFailureGatewayResponse': {'Type': 'AWS::ApiGateway::GatewayResponse', 'Properties': {'ResponseParameters': {'gatewayresponse.header.Access-Control-Allow-Origin': "'*'", 'gatewayresponse.header.Access-Control-Allow-Headers': "'*'"}, 'ResponseType': 'UNAUTHORIZED', 'RestApiId': {'Ref': 'ApiGatewayRestApi'}, 'StatusCode': '401'}}}}}